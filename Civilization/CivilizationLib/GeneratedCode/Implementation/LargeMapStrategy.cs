//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Implementation
{
	using Interfaces;
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;
    using Wrapper;

	public class LargeMapStrategy : MapStrategy, ILargeMapStrategy
	{
        public LargeMapStrategy()
        {
            height = 100;
            width = 100;
        }

        unsafe public override void createMap(List<ICase> map)
        {
            WrapperAlgo algo = new WrapperAlgo();
            CaseFactory factory = new CaseFactory();
            int** algoMap = algo.createMap(100, 100);
            int** algoBonusesMap = algo.createBonusesMap(100, 100, 0.05);
            for (int j = 0; j < height; j++)
            {
                for (int i = 0; i < width; i++)
                {
                    ICase newCase = factory.makeCase(algoMap[i][j]);
                    newCase.sqPos = new int[2] { i, j };

                    switch (algoBonusesMap[i][j])
                    {
                        case 1:
                            ICaseDecorator newFruitCase = new Fruit(newCase);
                            map.Add(newFruitCase);
                            break;
                        case 2:
                            ICaseDecorator newIronCase = new Iron(newCase);
                            map.Add(newIronCase);
                            break;
                        default:
                            map.Add(newCase);
                            break;
                    }
                }
            }
        }

	}
}

