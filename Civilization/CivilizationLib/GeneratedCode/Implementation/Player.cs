//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Implementation
{
	using Interfaces;
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;
    using System.ComponentModel;

    public class Player : IPlayer, INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        private void OnPropertyChanged(String property)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(property));
            }
        }

        public virtual string Pseudo
        {
            get;
            set;
        }

        public virtual CivilizationType Civilization
        {
            get;
            set;
        }

        public virtual int Score
        {
            get;
            set;
        }

        public virtual List<City> Cities
        {
            get;
            set;
        }

        public virtual List<IBoss> Boss
        {
            get;
            set;
        }

        public virtual List<IStudent> Students
        {
            get;
            set;
        }

        public virtual List<ITeacher> Teachers
        {
            get;
            set;
        }

        public virtual StatusType Status
        {
            get;
            set;
        }
        public virtual String Color
        {
            get;
            set;
        }

        public Player(String name, String Civ, String col)
        {
            if (Civ == "INFO")
            {
                Civilization = CivilizationType.INFO;

                // Il me faut les positions de départ ! :)
                Teachers = new List<ITeacher>();
                Teachers.Add(new TeacherINFO(this, new Case()));

                Students = new List<IStudent>();
                Teachers.Add(new TeacherINFO());

            }
            else
                Civilization = CivilizationType.EII;
            Pseudo = name;
            Score = 0;
            Cities = new List<City>();
            Cities.add(new City(this, 
            Status = StatusType.InGame;
            Color = col;
        }

        public virtual void chooseCivilization()
        {
            throw new System.NotImplementedException();
        }

        public virtual void endTurn()
        {
            throw new System.NotImplementedException();
        }

        public virtual void move()
        {
            throw new System.NotImplementedException();
        }

        public virtual void passTurn()
        {
            throw new System.NotImplementedException();
        }

        public virtual void attack()
        {
            throw new System.NotImplementedException();
        }

        public virtual void changeCityProduction()
        {
            throw new System.NotImplementedException();
        }

        public virtual void produceUnits(City city, Unit unit)
        {
            throw new System.NotImplementedException();
        }

    }
}

