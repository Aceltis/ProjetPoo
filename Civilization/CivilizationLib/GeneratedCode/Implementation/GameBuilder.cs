//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Implementation
{
	using Interfaces;
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;

	public class GameBuilder : IGameBuilder
	{
        private Queue<IPlayer> Players;
        public IMap Map { get; set; }

        public GameBuilder(int players, List<String> names, List<String> civs)
        {
            createPlayers(players, names, civs);
            createMap(players);
        }

		public virtual void createMap(int players)
		{
            if (players > 2)
            {
                Map = new Map();
                Map.setMapStrategy(new LargeMapStrategy());
                Map.createMap();
            }
            else
            {
                Map = new Map();
                Map.setMapStrategy(new SmallMapStrategy());
                Map.createMap();
            }
		}

		public virtual void createPlayers(int players, List<String> names, List<String> civs)
		{
            Players = new Queue<IPlayer>();

            if (players == 2)
            {
                Players.Enqueue(new Player(names[0], civs[0], "Red"));
                Players.Enqueue(new Player(names[1], civs[1], "Blue"));
            }
            else if (players == 3)
            {
                Players.Enqueue(new Player(names[0], civs[0], "Red"));
                Players.Enqueue(new Player(names[1], civs[1], "Blue"));
                Players.Enqueue(new Player(names[2], civs[2], "Orange"));
            }
            else
            {
                Players.Enqueue(new Player(names[0], civs[0], "Red"));
                Players.Enqueue(new Player(names[1], civs[1], "Blue"));
                Players.Enqueue(new Player(names[2], civs[2], "Orange"));
                Players.Enqueue(new Player(names[3], civs[3], "Green"));
            }
		}

        public virtual IGame build()
        {
            return new Game(Players, Map);
        }

	}
}

